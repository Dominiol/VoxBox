#!/usr/bin/env python
"""
VoxBox - IoT project for Intel Edison

https://github.com/Dominiol/VoxBox
"""

import config, imp, os, subprocess
import git, sys

home_path = os.getcwd()
loaded_modules = []

def load_all_modules():
    print 'Loading modules...'
    
    for file in os.listdir('modules'):
        if file.endswith('.py'):
            module_name = os.path.basename(file)[:-3]
            filename = os.path.join(home_path, 'modules', file)
            module = imp.load_source(module_name, filename)
            
            for name, obj in vars(module).iteritems():
                if hasattr(obj, 'pattern'):
                    loaded_modules.append(obj)
                    print '%s loaded' % (name)
    
    print '%s modules loaded!' % (len(loaded_modules))

def check_for_updates():
    repo = git.Repo()
    commits_behind = repo.iter_commits('master..origin/master')
    count = sum(1 for c in commits_ahead)
    
    if count == 0:
        print "Everything is up to date"
        return
    else:
        print "There are %s commits behind. Updating..." % (count)
        o = repo.remotes.origin
        o.pull()
        print "Updated! Please run script again..."
        sys.exit(0)

def main():
    check_for_updates()
    load_all_modules()

if __name__ == '__main__': 
   main()